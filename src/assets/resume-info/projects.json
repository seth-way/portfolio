[
  {
    "title": "Hall-O-Famers",
    "short": "hof",
    "description": "This fullstack Next.js sports trivia application challenges users to guess a famous athlete based on the player's history and accomplishments. Incorrect answers are punished with a lowered score. Quicker answers result in a higher score.",
    "contributors": [],
    "tech": [
      "react",
      "typescript",
      "nextjs",
      "framer",
      "postgresql",
      "drizzle",
      "vercel"
    ],
    "notes": [
      "This is a side project developed in my free time for the purpose of learning new technologies.",
      "This app uses Next.js for a deployable fullstack application.",
      "The initial puzzles are being stored locally, but this app will soon integrate a PostGreSQL database and Drizzle ORM for db management.",
      "I'm currently developing specific webscrapers for each sport to allow for faster DB migration."
    ],
    "links": {
      "repo": "https://github.com/seth-way/hall-o-famers",
      "live": "https://hall-o-famers.vercel.app/"
    }
  },
  {
    "title": "Chess with Frien-emies",
    "short": "chess",
    "description": "This React front-end chess game connects to a back-end service managing game state and enabling user interaction via WebSockets. It leverages Vite Federations to expose the game component as a consumable microservice.",
    "contributors": [
      "Zelalem Fitru",
      "Carissa Hluchan",
      "Robert Phillips",
      "Gwyneth Patrick",
      "Austin K",
      "Cory Bretsch",
      "Evan Davis",
      "Erin Pintozzi",
      "Jan Lehigh",
      "Lance Nelson",
      "Tyler Noble"
    ],
    "tech": ["react", "vite", "rollup", "socket-io", "javascript"],
    "notes": [
      "This application was deployed as either a standalone service or a consumable microservice, with its React component endpoint remotely exposed for easy integration.",
      "WebSocket connections with assignable rooms allowed real-time game updates for multiple users.",
      "Detailed architecture diagrams were created to illustrate the data flow, logic, and JSON contracts, supporting a multi-level microservice design across front-end and back-end services.",
      "*NOTE: As this application requires the continued deployment of external repos/dbs, I haven't included a live link. Please look to the gif for a working demo."
    ],
    "links": {
      "repo": "https://github.com/seth-way/chess_fe_microservice"
    }
  },
  {
    "title": "6¬∞ of Kevin Bacon",
    "short": "bacon",
    "description": "This app is a sleek UI built using React and designed to challenge users on their knowledge of movie trivia. Using an input device or a touchscreen, a user can drag and drop movies or movie stars while trying to create a valid puzzle. A puzzle is only valid if a star is between two movies they starred in, and vice versa.",
    "contributors": [],
    "tech": [
      "react",
      "react-router",
      "vite",
      "cypress",
      "javascript",
      "framer",
      "express",
      "node"
    ],
    "notes": [
      "The game ties together several new concepts I wasn't sure I could pull off. My idea required using a drag-n-drop interface, creating SVG paths to clip images to various shapes and using framer-motion to create smooth animations. All these new concepts came together nicely and I'm happy with the final UI.",
      "The app's various pieces of state became cumbersome to work with and so I made a decision to refactor all state to use a ZuStand store. It took time away from developing new features, but overall it was worth it. After the refactor, managing state became much more cut and dry. Most importantly, I was able to work with a useful new library in the process.",
      "The DnD-Kit Library comes with several useful new hooks. However, my use case was unique and so finding relevant examples was an issue. It required patience, trial and error and lots of debugging to integrate into my app.",
      "Cypress's drag-n-drop tools did not natively work with my chosen library, so that also took some research. I was able to find a useful 3rd party library that made it possible to use DnD-Kit with Cypress's testing suite.",
      "üèÖ Won 1st Runner-Up at Turing Demo Competition - 2410"
    ],
    "links": {
      "repo": "https://github.com/seth-way/degs-o-kev-bacon",
      "live": "https://degs-o-kev-bacon.vercel.app/"
    }
  },
  {
    "title": "Mini-App Sandbox",
    "short": "mini-apps",
    "description": "This app is a NextJS / React sandbox for experimenting with new and interesting libraries.",
    "contributors": [],
    "tech": ["react", "typescript", "nextjs", "framer"],
    "notes": [
      "The ReCharts mini-app processes and normalizes NFL DVOA data to display dynamic, weekly information in a clean and dynamic Cartesian graph.",
      "The chess mini-app was a proof-of-concept code spike for the React board and game-logic used in the Chess with Frien-emies FE Microservice."
    ],
    "links": {
      "repo": "https://github.com/seth-way/mini-app-sandbox",
      "live": "https://mini-app-sandbox.vercel.app/"
    }
  },
  {
    "title": "Dangol'Weather",
    "short": "weather",
    "description": "A local weather app that utilizes both the OpenWeatherMap and Google Maps auto-complete APIs. A user can input any US city and get the local weather, along with a 5-day forecast and a King of the Hill's - Boomhauer - inspired, quote that is tonally related to the state of the returned local weather.",
    "contributors": ["Zelalem Fitru", "Ryan O'Leary", "Robert Phillips"],
    "tech": [
      "typescript",
      "react",
      "react-router",
      "vite",
      "cypress",
      "tailwind",
      "framer"
    ],
    "notes": [
      "We handled allowing a user to select any US location by integrating Google's 'Location' and 'AutoComplete' api's.",
      "While navigating a fairly wide range of new technologies, we were successful in remaining committed to the design and functional minimalism that defined our initial vision for the application."
    ],
    "links": {
      "repo": "https://github.com/seth-way/dangol-weather?tab=readme-ov-file",
      "live": "https://dangol-weather.vercel.app/"
    }
  },
  {
    "title": "Tainted Turnips",
    "short": "turnips",
    "description": "A react-based, movie app that allows users to view, filter and discover movie titles all through a sleek and responsive UI.",
    "contributors": ["Marshall Hotaling"],
    "tech": ["react", "react-router", "cypress", "javascript"],
    "notes": [
      "When trying to deploy this site to GitHub pages, it did not work well with the BrowserRouter we used for page navigation. After thorough research, we refactored our router to use a HashRouter and were able to successfully deploy a working version of our app.",
      "This app was our first introduction to working with Cypress's testing suite. It is a robust and powerful library but it can be challenging to maneuver initially. We were able to successfully test and validate our entire app's UI, as well as any sad paths that could happen due to possible network errors."
    ],
    "links": {
      "repo": "https://github.com/seth-way/tainted-turnips",
      "live": "https://seth-way.github.io/tainted-turnips/#/"
    }
  },
  {
    "title": "Overlook Hotel",
    "short": "overlook",
    "description": "A hotel management tool for hotel customers to manage room bookings and calculate bills.",
    "contributors": [],
    "tech": ["javascript", "css", "html", "webpack"],
    "notes": [
      "In order to deploy this UI to github pages the locally running API also had to be deployed. I worked through this process and tracked my steps in a¬†public gist¬†so that my classmates and myself have access to a working example tutorial.",
      "The finished product is not only mobile friendly, but also received a 100 accessibility score from Google Lighthouse."
    ],
    "links": {
      "repo": "https://github.com/seth-way/Overlook-Hotel",
      "live": "https://seth-way.github.io/Overlook-Hotel/"
    }
  },
  {
    "title": "What's Cookin'?",
    "short": "cookin",
    "description": "This app is a recipe tracking / meal planning application that allows users to view recipes they want to cook and plan shopping trips around them. Users can view a list of recipes, filter them by name or tag, and choose recipes to cook.",
    "contributors": ["Carissa Hluchan", "Willem Pol", "Marshall Hotaling"],
    "tech": ["javascript", "css", "html", "webpack"],
    "notes": [
      "Our app crashed when conflicting merges did not present themselves as 'merge conflicts.' By visitting our commit history and utilizing a staging branch, we were able to introduce and remove all the appropriate code to successfully complete the merge.",
      "The recipe cost slider is a complex UI component made of 2 separate slider inputs. In order to make working with it easier, we used closures so that the cost-slider object had access to all the necessary variables."
    ],
    "links": {
      "repo": "https://github.com/seth-way/whats-cookin",
      "live": "https://seth-way.github.io/whats-cookin/"
    }
  },
  {
    "title": "Rock ¬∑ Paper ¬∑ Scissors",
    "short": "rps",
    "description": "This app allows 1 or 2 users to play a fun and interactive game of Rock, Paper, Scissors.",
    "contributors": [],
    "tech": ["javascript", "css", "html"],
    "notes": [
      "This project challenged my understanding of CSS animations and async delays. It was difficult, but rewarding to create a seamless UX, while keeping possible bugs out of the DOM during delays.",
      "This is the most complex CSS I have built to date and required research in CSS variables, color blending, @keyframe animations, transitions and layering through absolute-positioning. I'm very pleased with the final product.",
      "The 'console' was a complicated and layered element that required careful planning and manipulation to create. Parts needed to be hidden and cursor events disabled as necessary to eliminate unwanted DOM activities."
    ],
    "links": {
      "repo": "https://github.com/seth-way/rock-paper-scissors",
      "live": "https://seth-way.github.io/rock-paper-scissors/"
    }
  }
]
